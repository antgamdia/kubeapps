version: v1beta1
plugins:
  - name: go
    out: gen
    opt:
      - module=github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen
  - name: go-grpc
    out: gen
    opt:
      - module=github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen
      # The following option controls whether the generated interfaces require
      # the `mustEmbedUnimplemented**Server` method. This method is useful to
      # ensure that when you add a method to a proto service and regenerate
      # files, they will automatically implement the new method and return
      # "Unimplemented", as opposed to not compiling until the new method is
      # added explicitly. But a plugin can still embed the
      # `Unimplemented**Server` struct, it's just not enforced. The
      # unintentional downside of enforcing it via the
      # `mustEmbedUnimplemented**Server` for us is that the
      # `mustEmbedUnimplemented**Server` method is not exposed, which means that
      # *only* implementations in the same package (ie. with access to the same
      # unexposed method) can satisfy the interface. We explicitly want plugins
      # defined in other packages to be able to satisfy a generic gRPC server
      # interface.
      # Created https://github.com/grpc/grpc-go/issues/4500 to discuss upstream.
      - require_unimplemented_servers=false
  - name: grpc-gateway
    out: gen
    opt:
      - module=github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen
  # Consider migrating to openapiv3 once ready
  # https://github.com/grpc-ecosystem/grpc-gateway/pull/2147
  - name: openapiv2
    out: docs
    strategy: all
    opt:
      - allow_merge=true
      - merge_file_name=kubeapps-apis
      - allow_repeated_fields_in_body=true
      # - generate_unbound_methods=true # have to re-check it
      # - json_names_for_fields=false # have to re-check it
  # - name: js
  #   out: libs/gen/grpcweb/src/lib
  #   opt: import_style=commonjs,binary
  # - name: grpc-web
  #   out: libs/gen/grpcweb/src/lib
  #   opt: import_style=typescript,mode=grpcwebtext
  # https://github.com/stephenh/ts-proto
  - name: ts_proto
    path: ../../dashboard/node_modules/.bin/protoc-gen-ts_proto
    out: ../../dashboard/src/gen
    strategy: all
    opt:
      - outputClientImpl=grpc-web
      - esModuleInterop=true
      # - context=true #  Go-style ctx parameters
      # - esModuleInterop=true # esModuleInterop compliant
      # - env=browser # environment-specific assumptions
      # - useOptionals=true # use optional TypeScript properties
      # - exportCommonSymbols=false # utility types like DeepPartial wont be exported (avoid some import conflicts)
      # - addGrpcMetadata=false # add Metadata, which contains additional information (i.e. access tokens)
      # - nestJs=false  # required for metadata
      # # - returnObservable=false
      # - outputClientImpl=grpc-web
      # # - outputServices=grpc-js
      # - outputServices=generic-definitions
      # - module=github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen
      # FOR JUST GENERATING DEFINITIONS
      # - outputEncodeMethods=false
      # - outputJsonMethods=false
      # - outputClientImpl=false
  # - name: gen_ts
  #   path: ../../dashboard/node_modules/.node_modules/.bin/protoc-gen-ts
  #   out: ../../dashboard/src/gen
  #   strategy: all
  #   opt:
  #     - import_style=commonjs,binary:./app/src
